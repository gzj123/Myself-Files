一、JS发展史
  1、1994年 网景公司开发
  2、1995年 2.0 LiveScript，浏览器和服务端去使用这门语言
  3、IE3.0  JavaScript的克隆版本  JScript
  4、1997年 JavaScript1.1 草案 ECMA（欧洲计算机制造协会）
  5、2009年12月  ECMAScript 5.0
  6、2014年ECMAScript 6.0

  JavaScript = ECMAScript + DOM + BOM 
  JavaScript 主要是基于对象，语法不够严谨，是弱语言

二、JS引入方式：
  html中的脚本必须位于<script></script>标签之间
  脚本可被放置在html页面的<body>和<head>部分中，或者同时存在于两个部分。
  1、在head、body书写
  2、在标签内书写
  3、外部引入  ――外部引入JS文件： <script src=""></script> 在两个便签内不能放任何东西
  优缺点：
  1、在标签内直接写
     优先级最高
     代码多代码量大不利于维护
     主要适用于个别特殊效果的使用。
  2、在head、body部分加入
     速度快，没有服务器请求压力
     相对于外部引入单页代码量少
     不易于改版。不易于维护
     大型网站的首页
  3、引入外部  
     优点：易改版、减少代码量、有效利用缓存机制、
     缺点：相对于单页有垃圾代码、外部引入的href属性会给服务器造成压力

三、JS三种基本弹框以及调试方法
   1、alert ―― 警告框
   2、confirm ―― 确认弹窗
   3、prompt ―― 对话弹窗

   调试方法：
   1、console.log();――控制台输出内容
   2、alert();――弹出警告框
   3、document.write();――在文档中打印内容
   4、prompt();――弹出对话框
   5、confirm();――弹出确认框

四、JS注释
   注释的内容与注释的符号之间都要加一个空格
   1、单行注释―― // +注释内容
   2、多行注释（块注释）――  /*
   			       * 此注释主要注释该段代码的功能
			       * 也可以注释其他的比如author 等
			       *
			       */
   注意： 过多的javascript注释会降低javascript的执行速度和加载速度，因此在发布网站时去掉   javascript注释。

五、JS命名
   1、基本命名规范
    （1）首字母必须以字母、下划线、美元符号$
    （2）除首字母外的字符，可以有字母、下划线、数字、美元符号组成
    （3）区分大小写
    （4）不允许出现空格
    （5）不能以关键字和保留字命名
   2、命名推荐
    （1）遵循小驼峰命名法（除了第一个字母外，组成标识符的每个单词的首字母均要大写）
    （2）变量、属性的命名： 名词开头；   函数、方法的命名： 动词开头
    （3）常量命名：字母全部以大写命名，如果出现多个单词组合，以下划线隔开
    （4）构造函数：首字母大写，其余遵循小驼峰
   3、避免命名冲突的方法
     1.协同命名法
     2.对象空间命名法
     3.匿名函数

六、JS数据类型
   1、undefined ―― 未定义
   2、null      ―― 空
   3、number    ―― 数值
   4、boolean   ―― 布尔
   5、string    ―― 字符串
   6、object    ―― 对象

七、运算符
   1、算数运算符 ―― + - * / %
   2、逻辑运算符 ―― 与&&  或||  非!
   3、条件运算符 ―― 表达式1 ？ 表达式2 ：表达式3 ――表达式1进行判断，true则执行表达式1，false则执行表达式2
   4、赋值运算符 ―― “ = ” 赋值运算符并不是等于的含义
   5、关系运算符 ――  >  <  ==  ===  >=  <=  !=
   == 比较的只是两个的数值；  === 比较的是数值和数据类型两个
   运算符的优先级：
   逻辑非 > 算术运算符 > 关系操作符 > 逻辑与  逻辑或 > 条件运算符 > 赋值运算符




















